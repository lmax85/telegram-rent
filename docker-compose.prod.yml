version: '3.7'

services:
  cache:
    image: redis
    container_name: telegram_rent_cache
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    networks:
      - telegram_rent

  db:
    image: postgres:13
    container_name: telegram_rent_db
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: '${DB_DATABASE:-telegram_rent}'
      POSTGRES_USER: '${DB_USERNAME:-telegram_rent}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-telegram_rent}'
    ports:
      - '${FORWARD_DB_PORT:-25432}:5432'
    networks:
      - telegram_rent

  php:
    build:
      context: ./docker/prod/php/
      dockerfile: Dockerfile
    image: telegram_rent_php:dev
    container_name: telegram_rent_php
    volumes:
      - ./php-backend:/app
    networks:
      - telegram_rent
    depends_on:
      - cache
      - db
    healthcheck:
      test: [ "CMD-SHELL", "php artisan healthcheck:run || exit 1" ]
      interval: 5m
      timeout: 3s

  nginx:
    image: nginx:alpine
    container_name: telegram_rent_nginx
    working_dir: /app
    volumes:
      - ./media:/app/public/media
      - ./php-backend:/app
      - ./docker/prod/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - php
    networks:
      - telegram_rent

  certbot:
    image: certbot/certbot:latest
    container_name: telegram_rent_certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  node:
    build:
      context: .
      dockerfile: ./docker/prod/node/Dockerfile
    image: telegram_rent_node:dev
    container_name: telegram_rent_node
    networks:
      - telegram_rent
    depends_on:
      - php

  python:
    build:
      context: ./docker/prod/python/
      dockerfile: Dockerfile
    init: true
    image: telegram_rent_python:dev
    container_name: telegram_rent_python
    volumes:
      - ./media:/media
      - ./python-parser:/app
      - ./logs:/logs
    networks:
      - telegram_rent
    depends_on:
      - cache
      - db
    # healthcheck:
    #   test: [ "CMD-SHELL", "php artisan healthcheck:run || exit 1" ]
    #   interval: 5m
    #   timeout: 3s

networks:
  telegram_rent:
    driver: bridge

volumes:
  media:
  database:
    driver: local